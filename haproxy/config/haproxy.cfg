global
	node haproxy
	description Docker Load Balancer

	nbproc 1
	nbthread 4
	cpu-map auto:1/1-4 0-3

	#log /dev/log    local0
	#log /dev/log    local1 notice
	# log to docker
	log		fd@2 local2
	#stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	# no jailed user needed as Docker should be enough
	#chroot /var/lib/haproxy
	#user haproxy
	#group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /usr/local/etc/haproxy/certs/haproxy

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	# Stronger DH
	tune.ssl.default-dh-param 4096

defaults
	log     global
	mode    http
	option  httplog
	option  dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http
	# latency reduction
	option http-server-close

resolvers docker-dns
	nameserver docker 127.0.0.11:53
	resolve_retries 3
	timeout resolve 1s
	timeout retry   1s

# Basic auth user
#userlist phpmyadmin-users
#	group is-admin
#	user admin password {{ haproxy_cfg_phpmyadmin_secret }} groups is-admin

frontend http
	bind *:80
	bind *:443 ssl crt /usr/local/etc/haproxy/certs/haproxy/ alpn h2,http/1.1
	# ACLs
	acl stats-sni-header ssl_fc_sni -i stats.contoso.com
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	acl nextcloud-sni-header ssl_fc_sni_reg -i (own)?cloud\.contoso\.com
	# HTTP answers
	redirect scheme https if !{ ssl_fc } !letsencrypt-acl
	# Backends
	use_backend stats if stats-sni-header
	use_backend certbot if letsencrypt-acl
	use_backend nextcloud if nextcloud-sni-header
	default_backend nomatch

backend nomatch
	http-request deny deny_status 400

backend stats
	mode http
	stats enable
	stats hide-version
	stats realm Haproxy\ Statistics
	stats uri /
	stats auth admin:password123
	stats admin if TRUE
	stats refresh 10s

backend certbot
	server certbot certbot:9001 resolvers docker-dns init-addr libc,none

backend nextcloud
	description Nextcloud nginx in Docker
	mode http
	option forwardfor
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	option httpchk GET /status.php HTTP/1.1\r\nHost:\ cloud.contoso.com
	# careful with preload, takes months to go back to http
	# http-response set-header Strict-Transport-Security max-age=15768000;\ includeSubDomains;\ preload;
	http-response set-header Strict-Transport-Security max-age=15768000;\ includeSubDomains;
	server nextcloud-web nextcloud-web:80 check port 80 resolvers docker-dns init-addr libc,none alpn h2
